[core]
	editor = nano --smooth --tabstospaces --autoindent --const --tabsize=2 --fill=70
[user]
	email = me@stefanmaric.com
	name = Stefan Maric
[push]
	default = simple
[credential]
	helper = /usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring
[color]
	branch = auto
	diff = auto
	status = auto
[alias]
	amend = commit --status --verbose --amend
	ap = add --patch
	br = branch
	c = commit --status --verbose
	cm = commit -m
	co = checkout
	dc = diff --cached
	diff = diff --word-diff=color
	lc = log -1
	st = status --short --branch
	tl = tag --list
	su = !git pull && git submodule foreach 'git checkout $(git -C $toplevel symbolic-ref --short --quiet HEAD) && git pull'
# `git publish` pushes a new or existing local branch to a given remote.
# Usage:
# 	git publish [<remote>] <branch>
# Options:
# 	<remote>		Configured remote or GIT URL [default: origin].
# 	<branch>		Name of new or existing branch.
	publish = "!f(){ \
		b=${2:-$1};\
		test -z $2 && r=origin || r=$1;\
		git checkout $b || git checkout -b $b && git push -u $r $b;\
	}; f"
# `git purge` does local and remote cleanup.
#
# Usage:
# 	git publish <remote> <base_branch>
# Options:
# 	<remote>				Configured remote or GIT URL
# 	<base_branch>		Name of main branch to base the cleanup on.
#
# Lines description
# 	Store <remote> on $r
# 	Store <base_branch> on $r
# 	Sync <remote> branches
# 	Switch to desired <remote>/<base_branch> just in case, stop the fuction if it doesn't exists
# 	Delete <remote> branches
# 	Delete all <remote>'s merged branches into <base_branch>
# 	Delete all local merged branches into <base_branch>
# 	Go back to branch checked out before starting
# 	Garbage collector
	purge = "!f(){ \
		r=$1;\
		b=$2;\
		git fetch $r || exit 1;\
		git checkout --quiet $r/$b || exit 1;\
		git remote prune $r;\
		git branch --remotes --merged $r/$b \
			| egrep -v \"$r/(HEAD|master|develop|release|$b)\" \
			| sed \"s/$r\\//$r --delete /\" \
			| xargs -L 1 git push;\
		git branch --merged $r/$b | egrep -v \"(master|develop|release|$b)\" | xargs -n 1 git branch --delete;\
		git checkout --quiet -;\
		git gc;\
	}; f"

# Tell git to infer my username for github and bitbucket https repos
[url "https://stefanmaric@github.com/"]
	insteadOf = https://github.com/
[url "https://stefanmaric@bitbucket.org/"]
	insteadOf = https://bitbucket.org

# Also tell git to use https: instead of git:
[url "https://stefanmaric@github.com/"]
	insteadOf = git@github.com:
[url "https://stefanmaric@bitbucket.org/"]
	insteadOf = git@bitbucket.org:
